{"version":3,"sources":["Core/Logo.js","Core/Core.js","useGlobalAccount.js","useGlobalAccountLogged.js","useGlobalPopUp.js","Home.js","About.js","Accounts.js","Resources.js","MyAccount.js","App.js","serviceWorker.js","index.js"],"names":["Logo","props","history","useHistory","className","rel","href","place","src","process","alt","onClick","push","link","Core","React","useState","menu","setMenu","AboutPush","AccountPush","ResourcesPush","length","map","x","useGlobalAccount","createGlobalState","array","useGlobalState","useGlobalAccountLogged","account","useGlobalPopUp","popUp","Home","passwordStatus","setPasswordStatus","userValue","setUserValue","passwordValue","setPasswordValue","imageChosen","setImageChosen","setAccount","createdAccPopUp","setCreatedAccPopUp","setAccountLogged","imageList","leftClick","useCallback","undefined","rightClick","closePopUp","useEffect","cancel","setInterval","clearInterval","value","onChange","e","target","type","i","toLowerCase","setTimeout","width","height","circleChanger","About","technologies","setTechnologies","about","setAbout","buttonStyle","Accounts","userMadeAcc","slice","deafultAcc","setDefaultAcc","userAcc","setUserAcc","Resources","images","setImages","icons","setIcons","title","MyAccount","names","randomNumberOfTransactions","myArray","myNumber","howMuchPossitive","Math","ceil","random","randomNum","randomName","floor","accountLogged","balance","setBalance","positiveTransaction","setPositiveTransaction","negativeTransaction","setNegativeTransaction","transactionNumber","setTransactionNumber","popProfile","setPopProfile","dateNow","Date","now","logout","deleteTransactionPositive","console","log","attributes","deletedNumber","moneyValue","Number","filter","deleteTransactionNegative","transaction","format","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4481a746.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Logo.css\";\r\n\r\nfunction Logo(props) {\r\n  let history = useHistory();\r\n\r\n  let HomePush = () => {\r\n    history.push(props.link);\r\n  };\r\n  return (\r\n    <div className=\"align-items\">\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Lobster+Two&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <img\r\n        className={\"quill\" + props.place}\r\n        src={process.env.PUBLIC_URL + \"/Images/quill.svg\"}\r\n        alt=\"\"\r\n      ></img>\r\n      <div onClick={HomePush} className={\"LogoText\" + props.place}>\r\n        Slight Bank\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./Core.css\";\r\nimport Logo from \"./Logo\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nlet Core = () => {\r\n  let [menu, setMenu] = React.useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  let AboutPush = () => {\r\n    history.push(\"/About\");\r\n    setMenu([]);\r\n  };\r\n  let AccountPush = () => {\r\n    history.push(\"/Accounts\");\r\n    setMenu([]);\r\n  };\r\n  let ResourcesPush = () => {\r\n    history.push(\"/Resources\");\r\n    setMenu([]);\r\n  };\r\n  let humburgerMenu = () => {\r\n    if (menu.length === 0) {\r\n      setMenu([\"x\"]);\r\n    } else {\r\n      setMenu([]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <div className=\"upBar\">\r\n        <Logo link={\"/\"} place={\"Core\"} />\r\n        <div className=\"Desktop\">\r\n          <div className=\"flexButtons\">\r\n            <button onClick={AboutPush} className=\"upButtons About\">\r\n              About\r\n            </button>\r\n            <button onClick={AccountPush} className=\"upButtons Accounts\">\r\n              Accounts\r\n            </button>\r\n            <button onClick={ResourcesPush} className=\"upButtons Resources\">\r\n              Resources\r\n            </button>\r\n            <div className=\"spaceFiller\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Mobile\">\r\n          <div className=\"grow\"></div>\r\n          <button onClick={humburgerMenu} className=\"hamburgerMenu\">\r\n            <img\r\n              className=\"hamburger\"\r\n              src={process.env.PUBLIC_URL + \"/Images/meat.svg\"}\r\n              alt=\"\"\r\n            ></img>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"Mobile\">\r\n        {menu.map((x) => (\r\n          <div className=\"flexButtonsMobile\">\r\n            <button onClick={AboutPush} className=\"MobileButton\">\r\n              About\r\n            </button>\r\n            <button onClick={AccountPush} className=\"MobileButton\">\r\n              Accounts\r\n            </button>\r\n            <div>\r\n              <button onClick={ResourcesPush} className=\"MobileButton\">\r\n                Resources\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Core;\r\n","import { createGlobalState } from \"react-hooks-global-state\";\r\n\r\nlet initialState = {\r\n  array: [\r\n    [\"Marcin\", \"marcin99\"],\r\n    [\"x\", \"x\"],\r\n  ],\r\n};\r\nlet { useGlobalState } = createGlobalState(initialState);\r\n\r\nexport let useGlobalAccount = useGlobalState;\r\n","import { createGlobalState } from \"react-hooks-global-state\";\r\n\r\nlet initialState = { account: [] };\r\nlet { useGlobalState } = createGlobalState(initialState);\r\n\r\nexport let useGlobalAccountLogged = useGlobalState;\r\n","import { createGlobalState } from \"react-hooks-global-state\";\r\n\r\nlet initialState = { popUp: [] };\r\nlet { useGlobalState } = createGlobalState(initialState);\r\n\r\nexport let useGlobalPopUp = useGlobalState;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport \"./Home.css\";\r\nimport Core from \"./Core/Core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useGlobalAccount } from \"./useGlobalAccount\";\r\nimport { useGlobalAccountLogged } from \"./useGlobalAccountLogged\";\r\nimport { useGlobalPopUp } from \"./useGlobalPopUp\";\r\n\r\nfunction Home() {\r\n  let [passwordStatus, setPasswordStatus] = React.useState(\"eye-closed\");\r\n  let [userValue, setUserValue] = React.useState(\"\");\r\n  let [passwordValue, setPasswordValue] = React.useState(\"\");\r\n  let [imageChosen, setImageChosen] = React.useState(0);\r\n\r\n  let [account, setAccount] = useGlobalAccount(\"array\");\r\n  let [createdAccPopUp, setCreatedAccPopUp] = useGlobalPopUp(\"popUp\");\r\n  let [accountLogged, setAccountLogged] = useGlobalAccountLogged(\"account\");\r\n\r\n  let history = useHistory();\r\n\r\n  let LoginPush = () => {\r\n    history.push(\"/MyAccount\");\r\n  };\r\n\r\n  let imageList = [\r\n    [\"freedom\", \"Free yourself from any costs with SlightBank\", 0],\r\n    [\r\n      \"explore\",\r\n      \"Explore unexplored wtih the system of payments of SlightBank\",\r\n      1,\r\n    ],\r\n    [\r\n      \"obstacle\",\r\n      \"Defeat any obstacles with new saving system with SlightBank\",\r\n      2,\r\n    ],\r\n  ];\r\n\r\n  let changeStatus = () => {\r\n    if (passwordStatus !== \"eye-open\") {\r\n      setPasswordStatus(\"eye-open\");\r\n    } else {\r\n      setPasswordStatus(\"eye-closed\");\r\n    }\r\n  };\r\n  let typeChange = () => {\r\n    if (passwordStatus !== \"eye-open\") {\r\n      return \"password\";\r\n    } else {\r\n      return \"text\";\r\n    }\r\n  };\r\n  let onInputChangePassword = (e) => {\r\n    setPasswordValue(e.target.value);\r\n  };\r\n  let onInputChangeUser = (e) => {\r\n    setUserValue(e.target.value);\r\n  };\r\n\r\n  let circleChanger = (x) => {\r\n    if (x[2] === imageChosen) {\r\n      return <div className=\"imageCircleDark\"></div>;\r\n    } else {\r\n      return <div className=\"imageCircle\"></div>;\r\n    }\r\n  };\r\n\r\n  let leftClick = useCallback(() => {\r\n    if (imageList[imageChosen - 1] === undefined) {\r\n      setImageChosen(imageList.length - 1);\r\n    } else {\r\n      setImageChosen(imageChosen - 1);\r\n    }\r\n  }, [imageChosen, imageList]);\r\n\r\n  let rightClick = useCallback(() => {\r\n    if (imageList[imageChosen + 1] === undefined) {\r\n      setImageChosen(0);\r\n    } else {\r\n      setImageChosen(imageChosen + 1);\r\n    }\r\n  }, [imageChosen, imageList]);\r\n\r\n  let singup = () => {\r\n    if (userValue.length >= 3 && userValue.length <= 12) {\r\n      if (passwordValue.length >= 3 && passwordValue.length <= 12) {\r\n        for (let i = 0; i < account.length; i++) {\r\n          if (account[i][0].toLowerCase() === userValue.toLowerCase()) {\r\n            setCreatedAccPopUp([\r\n              [\"yellow\", \"Account with this name already exist!\"],\r\n            ]);\r\n            setTimeout(closePopUp, 5000);\r\n            setUserValue(\"\");\r\n            setPasswordValue(\"\");\r\n            return;\r\n          }\r\n        }\r\n        setAccount([...account, [userValue, passwordValue]]);\r\n        setUserValue(\"\");\r\n        setPasswordValue(\"\");\r\n        setCreatedAccPopUp([[\"green\", \"You successfully created an account!\"]]);\r\n        setTimeout(closePopUp, 5000);\r\n        return;\r\n      }\r\n    }\r\n    setUserValue(\"\");\r\n    setPasswordValue(\"\");\r\n    setCreatedAccPopUp([\r\n      [\"red\", \"Account and password need to be 3-12 letters long!\"],\r\n    ]);\r\n    setTimeout(closePopUp, 5000);\r\n  };\r\n\r\n  let closePopUp = () => {\r\n    setCreatedAccPopUp([]);\r\n  };\r\n\r\n  let login = () => {\r\n    for (let i = 0; i < account.length; i++) {\r\n      if (\r\n        account[i][0].toLowerCase() === userValue.toLowerCase() &&\r\n        account[i][1] === passwordValue\r\n      ) {\r\n        setUserValue(\"\");\r\n        setPasswordValue(\"\");\r\n        setAccountLogged(account[i][0]);\r\n        LoginPush();\r\n        return;\r\n      }\r\n    }\r\n    setCreatedAccPopUp([[\"red\", \"Incorrect username or password!\"]]);\r\n    setTimeout(closePopUp, 5000);\r\n    setUserValue(\"\");\r\n    setPasswordValue(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    let cancel = setInterval(rightClick, 5000);\r\n    return () => {\r\n      clearInterval(cancel);\r\n    };\r\n  }, [rightClick]);\r\n\r\n  return (\r\n    <div>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Lobster+Two&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <Core />\r\n      {createdAccPopUp.map((x) => (\r\n        <div className={\"CreatedAccount \" + x[0]}>\r\n          <div></div>\r\n          <div>{x[1]}</div>\r\n          <button onClick={closePopUp} className={\"closeButton \" + x[0]}>\r\n            X\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <div className=\"centre\">\r\n        <div className=\"LoginWindow\">\r\n          <img\r\n            className=\"LoginQuill\"\r\n            src={process.env.PUBLIC_URL + \"/Images/quilllogin.svg\"}\r\n            alt=\"\"\r\n          ></img>\r\n          <div className=\"Title\">Slight Bank</div>\r\n          <div className=\"LoginText\">Username</div>\r\n          <input\r\n            value={userValue}\r\n            onChange={onInputChangeUser}\r\n            className=\"input\"\r\n          />\r\n          <div className=\"LoginText\">Password</div>\r\n          <input\r\n            type={typeChange()}\r\n            value={passwordValue}\r\n            onChange={onInputChangePassword}\r\n            className=\"input\"\r\n          />\r\n          <img\r\n            onClick={changeStatus}\r\n            className=\"Eye\"\r\n            src={process.env.PUBLIC_URL + \"/Images/\" + passwordStatus + \".svg\"}\r\n            alt=\"\"\r\n          ></img>\r\n          <div className=\"row\">\r\n            <button onClick={login} className=\"ButtonLog\">\r\n              Log-in\r\n            </button>\r\n            <div className=\"SpaceButtons\"></div>\r\n            <button onClick={singup} className=\"ButtonLog\">\r\n              Sign-up\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"space\"></div>\r\n        <div>\r\n          <img\r\n            width=\"600px\"\r\n            height=\"400px\"\r\n            className=\"ImageOnSlider\"\r\n            src={\r\n              process.env.PUBLIC_URL +\r\n              \"/Images/\" +\r\n              imageList[imageChosen][0] +\r\n              \".jpg\"\r\n            }\r\n            alt=\"\"\r\n          ></img>\r\n          <div className=\"GrayScreen\">\r\n            <div className=\"ImageText\">{imageList[imageChosen][1]}</div>\r\n            <button className=\"buttonSlider\" onClick={leftClick}>\r\n              <img\r\n                className=\"left\"\r\n                width=\"32px\"\r\n                height=\"32px\"\r\n                src={process.env.PUBLIC_URL + \"/Images/left-arrow.svg\"}\r\n                alt=\"\"\r\n              ></img>\r\n            </button>\r\n            <button className=\"buttonSlider\" onClick={rightClick}>\r\n              <img\r\n                className=\"right\"\r\n                width=\"32px\"\r\n                height=\"32px\"\r\n                src={process.env.PUBLIC_URL + \"/Images/right-arrow.svg\"}\r\n                alt=\"\"\r\n              ></img>\r\n            </button>\r\n          </div>\r\n          <div className=\"myRow\">{imageList.map((x) => circleChanger(x))}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Core from \"./Core/Core\";\r\nimport \"./About.css\";\r\n\r\nfunction About() {\r\n  let [technologies, setTechnologies] = React.useState([]);\r\n  let [about, setAbout] = React.useState([]);\r\n\r\n  let showTextAbout = () => {\r\n    if (about.length === 0) {\r\n      setAbout([\"x\"]);\r\n    } else {\r\n      setAbout([]);\r\n    }\r\n  };\r\n\r\n  let showText = () => {\r\n    if (technologies.length === 0) {\r\n      setTechnologies([\"x\"]);\r\n    } else {\r\n      setTechnologies([]);\r\n    }\r\n  };\r\n\r\n  let buttonStyle = (x) => {\r\n    if (x.length === 0) {\r\n      return (\r\n        <img\r\n          height=\"30px\"\r\n          className=\"nadropdown\"\r\n          src={process.env.PUBLIC_URL + \"/Images/drop-down-noactive.svg\"}\r\n          alt=\"\"\r\n        ></img>\r\n      );\r\n    }\r\n    return (\r\n      <img\r\n        height=\"30px\"\r\n        className=\"nadropdown\"\r\n        src={process.env.PUBLIC_URL + \"/Images/drop-down-active.svg\"}\r\n        alt=\"\"\r\n      ></img>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Core />\r\n      <button className=\"showButton\" onClick={showTextAbout}>\r\n        {buttonStyle(about)}\r\n        About me:\r\n      </button>\r\n      {about.map((x) => (\r\n        <div>\r\n          <div className=\"bigText\">About me:</div>\r\n          <div className=\"smallText\">\r\n            My name is Marcin Mędryk and im 21 years old front end developer\r\n          </div>\r\n          <div className=\"bigText\">Education:</div>\r\n          <div className=\"smallText\">\r\n            <div>\r\n              <div>High school - CKU1 w Warszawie (Finished)</div>\r\n              <div className=\"littleMargins\">\r\n                College - SGGW, Inżynieria systemów biotechnicznych (Unfinished)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <button className=\"showButton\" onClick={showText}>\r\n        {buttonStyle(technologies)}\r\n        Technologies used:\r\n      </button>\r\n      {technologies.map((x) => (\r\n        <div>\r\n          <div className=\"bigText\">Github Pages:</div>\r\n          <div className=\"smallText\">\r\n            for deploying the live version of the app\r\n          </div>\r\n          <div className=\"bigText\">React:</div>\r\n          <div className=\"smallText\">As the main framework of the app</div>\r\n          <div className=\"bigText\">React-router:</div>\r\n          <div className=\"smallText\">For creating routing in the app</div>\r\n          <div className=\"bigText\">React-global-state:</div>\r\n          <div className=\"smallText\">For creating global states in the app</div>\r\n          <div className=\"bigText\">Reactive Design:</div>\r\n          <div className=\"smallText\">\r\n            The layout changes based on the device screen-size (Mobile, Desktop)\r\n          </div>\r\n          <div className=\"bigText\">Figma:</div>\r\n          <div className=\"smallText\">For the design</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Core from \"./Core/Core\";\r\nimport \"./Accounts.css\";\r\nimport { useGlobalAccount } from \"./useGlobalAccount\";\r\n\r\nfunction Accounts() {\r\n  // eslint-disable-next-line no-unused-vars\r\n  let [account, setAccount] = useGlobalAccount(\"array\");\r\n\r\n  let userMadeAcc = account.slice(2);\r\n\r\n  let [deafultAcc, setDefaultAcc] = React.useState([]);\r\n  let [userAcc, setUserAcc] = React.useState([]);\r\n\r\n  let showTextDefault = () => {\r\n    if (deafultAcc.length === 0) {\r\n      setDefaultAcc([\"x\"]);\r\n    } else {\r\n      setDefaultAcc([]);\r\n    }\r\n  };\r\n\r\n  let showTextUser = () => {\r\n    if (userAcc.length === 0) {\r\n      setUserAcc([\"x\"]);\r\n    } else {\r\n      setUserAcc([]);\r\n    }\r\n  };\r\n\r\n  let userAccShow = () => {\r\n    if (userMadeAcc.length !== 0) {\r\n      return (\r\n        <div>\r\n          <div className=\"bigText\">User accounts:</div>\r\n          {userMadeAcc.map((x) => (\r\n            <div className=\"columnAccounts\">\r\n              <div className=\"littleMargins centreAccounts\">\r\n                There's a list of your accounts:\r\n              </div>\r\n              <div className=\"littleMargins centreAccounts\">\r\n                Username: {x[0]}\r\n              </div>\r\n              <div className=\"centreAccounts\"> Password: {x[1]}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"bigText\">User accounts:</div>\r\n        <div className=\"columnAccounts\">\r\n          <div className=\"littleMargins centreAccounts\">\r\n            List is empty, please create your account with Sign-up button in\r\n            home-page\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let buttonStyle = (x) => {\r\n    if (x.length === 0) {\r\n      return (\r\n        <img\r\n          height=\"30px\"\r\n          className=\"nadropdown\"\r\n          src={process.env.PUBLIC_URL + \"/Images/drop-down-noactive.svg\"}\r\n          alt=\"\"\r\n        ></img>\r\n      );\r\n    }\r\n    return (\r\n      <img\r\n        height=\"30px\"\r\n        className=\"nadropdown\"\r\n        src={process.env.PUBLIC_URL + \"/Images/drop-down-active.svg\"}\r\n        alt=\"\"\r\n      ></img>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Core />\r\n      <div>\r\n        <button onClick={showTextDefault} className=\"showButton\">\r\n          {buttonStyle(deafultAcc)}\r\n          Default accounts:\r\n        </button>\r\n        {deafultAcc.map((x) => (\r\n          <div>\r\n            <div className=\"bigText\">Default accounts:</div>\r\n            <div className=\"smallText\">\r\n              <div>\r\n                <div>You can use predetermined accounts from this list:</div>\r\n                <div className=\"littleMargins\">Username: Marcin</div>\r\n                <div> Password: marcin99</div>\r\n                <div className=\"littleMargins\">Username: x</div>\r\n                <div> Password: x</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button onClick={showTextUser} className=\"showButton littleMargins\">\r\n          {buttonStyle(userAcc)}\r\n          User accounts:\r\n        </button>\r\n        {userAcc.map((x) => userAccShow())}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accounts;\r\n","import React from \"react\";\r\nimport Core from \"./Core/Core\";\r\n\r\nfunction Resources() {\r\n  let [images, setImages] = React.useState([]);\r\n  let [icons, setIcons] = React.useState([]);\r\n\r\n  let showTextImages = () => {\r\n    if (images.length === 0) {\r\n      setImages([\"x\"]);\r\n    } else {\r\n      setImages([]);\r\n    }\r\n  };\r\n\r\n  let showTextIcons = () => {\r\n    if (icons.length === 0) {\r\n      setIcons([\"x\"]);\r\n    } else {\r\n      setIcons([]);\r\n    }\r\n  };\r\n\r\n  let buttonStyle = (x) => {\r\n    if (x.length === 0) {\r\n      return (\r\n        <img\r\n          height=\"30px\"\r\n          className=\"nadropdown\"\r\n          src={process.env.PUBLIC_URL + \"/Images/drop-down-noactive.svg\"}\r\n          alt=\"\"\r\n        ></img>\r\n      );\r\n    }\r\n    return (\r\n      <img\r\n        height=\"30px\"\r\n        className=\"nadropdown\"\r\n        src={process.env.PUBLIC_URL + \"/Images/drop-down-active.svg\"}\r\n        alt=\"\"\r\n      ></img>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Core />\r\n      <button className=\"showButton\" onClick={showTextImages}>\r\n        {buttonStyle(images)}\r\n        Images used:\r\n      </button>\r\n      {images.map((x) => (\r\n        <div>\r\n          <div className=\"bigText\">Images used:</div>\r\n          <div className=\"smallText\">\r\n            <div>\r\n              <div>Zdjęcie autorstwa Artem Beliaikin z Pexels</div>\r\n              <div className=\"littleMargins\">\r\n                Zdjęcie autorstwa Vlada Karpovich z Pexels\r\n              </div>\r\n              <div className=\"littleMargins\">\r\n                Zdjęcie autorstwa Pixabay z Pexels\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <button className=\"showButton\" onClick={showTextIcons}>\r\n        {buttonStyle(icons)}\r\n        Icons used:\r\n      </button>\r\n      {icons.map((x) => (\r\n        <div>\r\n          <div className=\"bigText\">Icons used:</div>\r\n          <div className=\"smallText\">\r\n            <div>\r\n              <div>\r\n                Icons made by{\" \"}\r\n                <a\r\n                  href=\"https://www.flaticon.com/authors/google\"\r\n                  title=\"Google\"\r\n                >\r\n                  Google\r\n                </a>{\" \"}\r\n                from{\" \"}\r\n                <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                  www.flaticon.com\r\n                </a>\r\n              </div>\r\n              <div className=\"littleMargins\">\r\n                Icons made by{\" \"}\r\n                <a\r\n                  href=\"https://www.flaticon.com/authors/pixel-perfect\"\r\n                  title=\"Pixel perfect\"\r\n                >\r\n                  Pixel perfect\r\n                </a>{\" \"}\r\n                from{\" \"}\r\n                <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                  www.flaticon.com\r\n                </a>\r\n              </div>\r\n              <div className=\"littleMargins\">\r\n                <div>\r\n                  Icons made by{\" \"}\r\n                  <a\r\n                    href=\"https://www.flaticon.com/authors/freepik\"\r\n                    title=\"Freepik\"\r\n                  >\r\n                    Freepik\r\n                  </a>{\" \"}\r\n                  from{\" \"}\r\n                  <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                    www.flaticon.com\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"littleMargins\">\r\n                <div>\r\n                  Icons made by{\" \"}\r\n                  <a\r\n                    href=\"https://www.flaticon.com/authors/roundicons\"\r\n                    title=\"Roundicons\"\r\n                  >\r\n                    Roundicons\r\n                  </a>{\" \"}\r\n                  from{\" \"}\r\n                  <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                    www.flaticon.com\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"littleMargins\">\r\n                <div>\r\n                  Icons made by{\" \"}\r\n                  <a\r\n                    href=\"https://www.flaticon.com/authors/dmitri13\"\r\n                    title=\"dmitri13\"\r\n                  >\r\n                    dmitri13\r\n                  </a>{\" \"}\r\n                  from{\" \"}\r\n                  <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                    www.flaticon.com\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resources;\r\n","import React from \"react\";\r\nimport Logo from \"./Core/Logo\";\r\nimport \"./MyAccount.css\";\r\nimport { useGlobalAccountLogged } from \"./useGlobalAccountLogged\";\r\nimport { useGlobalPopUp } from \"./useGlobalPopUp\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\nfunction MyAccount() {\r\n  let names = [\r\n    \"Netflix:\",\r\n    \"Amazon:\",\r\n    \"Google:\",\r\n    \"Shopping:\",\r\n    \"Music:\",\r\n    \"Food:\",\r\n    \"Clothes:\",\r\n    \"Traveling:\",\r\n  ];\r\n\r\n  let randomNumberOfTransactions = () => {\r\n    let myArray = [];\r\n    let myNumber = 0;\r\n    let howMuchPossitive = Math.ceil(Math.random() * 10);\r\n    for (let i = 0; i < howMuchPossitive; i++) {\r\n      let randomNum = Math.ceil(Math.random() * 50);\r\n      let randomName = Math.floor(Math.random() * names.length);\r\n      myArray.push([randomNum, myNumber + \"a\", names[randomName]]);\r\n      myNumber++;\r\n    }\r\n    return myArray;\r\n  };\r\n\r\n  let [accountLogged, setAccountLogged] = useGlobalAccountLogged(\"account\");\r\n  let [balance, setBalance] = React.useState(\r\n    Math.ceil(Math.random() * 470 + 30)\r\n  );\r\n  let [positiveTransaction, setPositiveTransaction] = React.useState(\r\n    randomNumberOfTransactions()\r\n  );\r\n  let [negativeTransaction, setNegativeTransaction] = React.useState(\r\n    randomNumberOfTransactions()\r\n  );\r\n  let [transactionNumber, setTransactionNumber] = React.useState(0);\r\n  let [popProfile, setPopProfile] = React.useState([]);\r\n\r\n  let [createdAccPopUp, setCreatedAccPopUp] = useGlobalPopUp(\"popUp\");\r\n\r\n  let dateNow = new Date(Date.now());\r\n\r\n  let history = useHistory();\r\n\r\n  let closePopUp = () => {\r\n    setCreatedAccPopUp([]);\r\n  };\r\n\r\n  let logout = () => {\r\n    setAccountLogged([]);\r\n    history.push(\"/\");\r\n    setTimeout(closePopUp, 5000);\r\n    setCreatedAccPopUp([\r\n      [\"green\", \"You successfully logged out from your account!\"],\r\n    ]);\r\n  };\r\n\r\n  let checkProfile = () => {\r\n    console.log(popProfile.length);\r\n    if (popProfile.length === 0) {\r\n      setPopProfile([\"x\"]);\r\n    } else {\r\n      setPopProfile([]);\r\n    }\r\n  };\r\n\r\n  let deleteTransactionPositive = (x) => {\r\n    console.log(x.target.attributes[0].value);\r\n    let deletedNumber = x.target.attributes[0].value;\r\n    let moneyValue = Number(x.target.attributes[1].value);\r\n    setPositiveTransaction(\r\n      positiveTransaction.filter((x) => x[1] !== deletedNumber)\r\n    );\r\n    setBalance(balance - moneyValue);\r\n  };\r\n  let deleteTransactionNegative = (x) => {\r\n    console.log(x.target.attributes[0].value);\r\n    let deletedNumber = x.target.attributes[0].value;\r\n    let moneyValue = Number(x.target.attributes[1].value);\r\n    setNegativeTransaction(\r\n      negativeTransaction.filter((x) => x[1] !== deletedNumber)\r\n    );\r\n    setBalance(balance + moneyValue);\r\n  };\r\n\r\n  let addPositiveTransaction = () => {\r\n    let randomNum = Math.ceil(Math.random() * 50);\r\n    let randomName = Math.floor(Math.random() * names.length);\r\n    setPositiveTransaction([\r\n      ...positiveTransaction,\r\n      [randomNum, \"\" + transactionNumber, names[randomName]],\r\n    ]);\r\n    setTransactionNumber(transactionNumber + 1);\r\n    setBalance(balance + randomNum);\r\n  };\r\n\r\n  let addNegativeTransaction = () => {\r\n    let randomNum = Math.ceil(Math.random() * 50);\r\n    let randomName = Math.floor(Math.random() * names.length);\r\n    setNegativeTransaction([\r\n      ...negativeTransaction,\r\n      [randomNum, \"\" + transactionNumber, names[randomName]],\r\n    ]);\r\n    setTransactionNumber(transactionNumber + 1);\r\n    setBalance(balance - randomNum);\r\n  };\r\n\r\n  console.log(accountLogged);\r\n  let areYouLoggedIn = () => {\r\n    if (accountLogged.length === 0) {\r\n      history.push(\"/\");\r\n      setTimeout(closePopUp, 5000);\r\n      setCreatedAccPopUp([\r\n        [\r\n          \"red\",\r\n          \"Youre not logged in to any accounts! (GlobalState's reset after refreshing page)\",\r\n        ],\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={areYouLoggedIn()}>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <div className=\"upBarLogin\">\r\n        <button onClick={checkProfile} className=\"MenuButton MobileOnly\">\r\n          <img\r\n            className=\"ProfileImg\"\r\n            src={process.env.PUBLIC_URL + \"/Images/user.svg\"}\r\n            alt=\"\"\r\n          ></img>\r\n        </button>\r\n        <button className=\"AccountButton DesktopOnly\">\r\n          Logged as: {accountLogged}\r\n        </button>\r\n        <Logo link={\"/MyAccount\"} place={\"Account\"} />\r\n        <button onClick={logout} className=\"MenuButton MobileOnly\">\r\n          <img\r\n            className=\"LogOutImg\"\r\n            src={process.env.PUBLIC_URL + \"/Images/logout.svg\"}\r\n            alt=\"\"\r\n          ></img>\r\n        </button>\r\n        <button onClick={logout} className=\"AccountButton DesktopOnly\">\r\n          Log-out\r\n        </button>\r\n      </div>\r\n      {popProfile.map((x) => (\r\n        <div className=\"profileSettings\">\r\n          <div className=\"column\">\r\n            <div className=\"centre littleMargin\">\r\n              Logged as: {accountLogged}\r\n            </div>\r\n            <div className=\"centre littleMargin\">\r\n              Account Balance: {balance}PLN\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"myCentre\">\r\n        <div className=\"longBar\">\r\n          <div className=\"balanceDiv\">\r\n            <div></div>\r\n            <div className=\"textDivAcc\">\r\n              <div className=\"balanceStatus\">Available Balance:</div>\r\n              <div className=\"moneyStatus\">{balance}PLN</div>\r\n            </div>\r\n            <div></div>\r\n          </div>\r\n          <div className=\"rowTransaction\">\r\n            <div className=\"transactionBox\">\r\n              <div className=\"endFiller\"></div>\r\n              {positiveTransaction.map((x) => (\r\n                <div className=\"centreText\">\r\n                  <div className=\"columnTransaction\">\r\n                    <div className=\"centreTransaction\">\r\n                      {x[2]}\r\n                      <div className=\"positiveBalance\"> {x[0]}PLN</div>\r\n                      <button\r\n                        transaction={x[1]}\r\n                        moneyValue={x[0]}\r\n                        onClick={deleteTransactionPositive}\r\n                        className=\"deleteButton\"\r\n                      >\r\n                        X\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"centreTransaction\">\r\n                      <Moment format=\"YYYY/MM/DD\">{dateNow}</Moment>\r\n                    </div>\r\n                    <div className=\"line\"></div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <button onClick={addPositiveTransaction} className=\"addButton\">\r\n                +\r\n              </button>\r\n              <div className=\"endFiller\"></div>\r\n            </div>\r\n            <div className=\"transactionBox\">\r\n              <div className=\"endFiller\"></div>\r\n              {negativeTransaction.map((x) => (\r\n                <div className=\"centreText\">\r\n                  <div className=\"columnTransaction\">\r\n                    <div className=\"centreTransaction\">\r\n                      {x[2]} <div className=\"negativeBalance\">{x[0]}PLN</div>\r\n                      <button\r\n                        transaction={x[1]}\r\n                        moneyValue={x[0]}\r\n                        onClick={deleteTransactionNegative}\r\n                        className=\"deleteButton\"\r\n                      >\r\n                        X\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"centreTransaction\">\r\n                      <Moment format=\"YYYY/MM/DD\">{dateNow}</Moment>\r\n                    </div>\r\n                    <div className=\"line\"></div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <button onClick={addNegativeTransaction} className=\"addButton\">\r\n                +\r\n              </button>\r\n              <div className=\"endFiller\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"endFiller\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyAccount;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Accounts from \"./Accounts\";\nimport Resources from \"./Resources\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport MyAccount from \"./MyAccount\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/Resources\">\n          <Resources />\n        </Route>\n        <Route path=\"/About\">\n          <About />\n        </Route>\n        <Route path=\"/Accounts\">\n          <Accounts />\n        </Route>\n        <Route path=\"/MyAccount\">\n          <MyAccount />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}