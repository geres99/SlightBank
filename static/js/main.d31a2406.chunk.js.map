{"version":3,"sources":["Core/Logo.js","Core/Core.js","useGlobalAccount.js","Home.js","About.js","Accounts.js","Resources.js","App.js","serviceWorker.js","index.js"],"names":["Logo","className","rel","href","src","process","alt","to","Core","React","useState","menu","setMenu","history","useHistory","AboutPush","push","AccountPush","ResourcesPush","onClick","length","map","x","useGlobalAccount","createGlobalState","array","useGlobalState","Home","passwordStatus","setPasswordStatus","userValue","setUserValue","passwordValue","setPasswordValue","imageChosen","setImageChosen","account","setAccount","imageList","leftClick","useCallback","undefined","rightClick","useEffect","cancel","setInterval","clearInterval","value","onChange","e","target","type","console","log","i","toLowerCase","alert","width","height","circleChanger","About","Accounts","Resources","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d31a2406.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./Logo.css\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"align-items\">\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Lobster+Two&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <img\r\n        className=\"quill\"\r\n        src={process.env.PUBLIC_URL + \"/Images/quill.svg\"}\r\n        alt=\"\"\r\n      ></img>\r\n      <Link to=\"/\">\r\n        <div className=\"LogoText\">Slight Bank</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./Core.css\";\r\nimport Logo from \"./Logo\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nlet Core = () => {\r\n  let [menu, setMenu] = React.useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  let AboutPush = () => {\r\n    history.push(\"/About\");\r\n    setMenu([]);\r\n  };\r\n  let AccountPush = () => {\r\n    history.push(\"/Accounts\");\r\n    setMenu([]);\r\n  };\r\n  let ResourcesPush = () => {\r\n    history.push(\"/Resources\");\r\n    setMenu([]);\r\n  };\r\n  let humburgerMenu = () => {\r\n    if (menu.length === 0) {\r\n      setMenu([\"x\"]);\r\n    } else {\r\n      setMenu([]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <div className=\"upBar\">\r\n        <Logo />\r\n        <div className=\"Desktop\">\r\n          <div className=\"flexButtons\">\r\n            <button onClick={AboutPush} className=\"upButtons About\">\r\n              About\r\n            </button>\r\n            <button onClick={AccountPush} className=\"upButtons Accounts\">\r\n              Accounts\r\n            </button>\r\n            <button onClick={ResourcesPush} className=\"upButtons Resources\">\r\n              Resources\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"Mobile\">\r\n          <div className=\"grow\"></div>\r\n          <button onClick={humburgerMenu} className=\"hamburgerMenu\">\r\n            <img\r\n              className=\"hamburger\"\r\n              src={process.env.PUBLIC_URL + \"/Images/meat.svg\"}\r\n              alt=\"\"\r\n            ></img>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"Mobile\">\r\n        {menu.map((x) => (\r\n          <div className=\"flexButtonsMobile\">\r\n            <button onClick={AboutPush} className=\"MobileButton\">\r\n              About\r\n            </button>\r\n            <button onClick={AccountPush} className=\"MobileButton\">\r\n              Accounts\r\n            </button>\r\n            <div>\r\n              <button onClick={ResourcesPush} className=\"MobileButton\">\r\n                Resources\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Core;\r\n","import { createGlobalState } from \"react-hooks-global-state\";\r\n\r\nlet initialState = { array: [[\"marcin\", \"marcin99\"]] };\r\nlet { useGlobalState } = createGlobalState(initialState);\r\n\r\nexport let useGlobalAccount = useGlobalState;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport \"./Home.css\";\r\nimport Core from \"./Core/Core\";\r\nimport { useGlobalAccount } from \"./useGlobalAccount\";\r\n\r\nfunction Home() {\r\n  let [passwordStatus, setPasswordStatus] = React.useState(\"eye-closed\");\r\n  let [userValue, setUserValue] = React.useState(\"\");\r\n  let [passwordValue, setPasswordValue] = React.useState(\"\");\r\n  let [imageChosen, setImageChosen] = React.useState(0);\r\n\r\n  let [account, setAccount] = useGlobalAccount(\"array\");\r\n\r\n  let imageList = [\r\n    [\"freedom\", \"Free yourself from any costs with SlightBank\", 0],\r\n    [\r\n      \"explore\",\r\n      \"Explore unexplored wtih the system of payments of SlightBank\",\r\n      1,\r\n    ],\r\n    [\r\n      \"obstacle\",\r\n      \"Defeat any obstacles with new saving system with SlightBank\",\r\n      2,\r\n    ],\r\n  ];\r\n\r\n  let changeStatus = () => {\r\n    if (passwordStatus !== \"eye-open\") {\r\n      setPasswordStatus(\"eye-open\");\r\n    } else {\r\n      setPasswordStatus(\"eye-closed\");\r\n    }\r\n  };\r\n  let typeChange = () => {\r\n    if (passwordStatus !== \"eye-open\") {\r\n      return \"password\";\r\n    } else {\r\n      return \"text\";\r\n    }\r\n  };\r\n  let onInputChangePassword = (e) => {\r\n    setPasswordValue(e.target.value);\r\n  };\r\n  let onInputChangeUser = (e) => {\r\n    setUserValue(e.target.value);\r\n  };\r\n\r\n  let circleChanger = (x) => {\r\n    if (x[2] === imageChosen) {\r\n      return <div className=\"imageCircleDark\"></div>;\r\n    } else {\r\n      return <div className=\"imageCircle\"></div>;\r\n    }\r\n  };\r\n\r\n  let leftClick = useCallback(() => {\r\n    if (imageList[imageChosen - 1] === undefined) {\r\n      setImageChosen(imageList.length - 1);\r\n    } else {\r\n      setImageChosen(imageChosen - 1);\r\n    }\r\n  }, [imageChosen, imageList]);\r\n\r\n  let rightClick = useCallback(() => {\r\n    if (imageList[imageChosen + 1] === undefined) {\r\n      setImageChosen(0);\r\n    } else {\r\n      setImageChosen(imageChosen + 1);\r\n    }\r\n  }, [imageChosen, imageList]);\r\n\r\n  let singup = () => {\r\n    if (userValue.length >= 3 && userValue.length <= 12) {\r\n      if (passwordValue.length >= 3 && passwordValue.length <= 12) {\r\n        for (let i = 0; i < account.length; i++) {\r\n          if (account[i][0].toLowerCase() === userValue.toLowerCase()) {\r\n            return;\r\n          }\r\n        }\r\n        setAccount([...account, [userValue, passwordValue]]);\r\n        setUserValue(\"\");\r\n        setPasswordValue(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  let login = () => {\r\n    console.log(account);\r\n    for (let i = 0; i < account.length; i++) {\r\n      if (\r\n        account[i][0].toLowerCase() === userValue.toLowerCase() &&\r\n        account[i][1] === passwordValue\r\n      ) {\r\n        setUserValue(\"\");\r\n        setPasswordValue(\"\");\r\n        alert(\"Zalogowany na konto \" + account[i][0]);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let cancel = setInterval(rightClick, 5000);\r\n    return () => {\r\n      clearInterval(cancel);\r\n    };\r\n  }, [rightClick]);\r\n\r\n  return (\r\n    <div>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Lobster+Two&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <Core />\r\n      <div className=\"centre\">\r\n        <div className=\"LoginWindow\">\r\n          <img\r\n            className=\"LoginQuill\"\r\n            src={process.env.PUBLIC_URL + \"/Images/quilllogin.svg\"}\r\n            alt=\"\"\r\n          ></img>\r\n          <div className=\"Title\">Slight Bank</div>\r\n          <div className=\"LoginText\">Username</div>\r\n          <input\r\n            value={userValue}\r\n            onChange={onInputChangeUser}\r\n            className=\"input\"\r\n          />\r\n          <div className=\"LoginText\">Password</div>\r\n          <input\r\n            type={typeChange()}\r\n            value={passwordValue}\r\n            onChange={onInputChangePassword}\r\n            className=\"input\"\r\n          />\r\n          <img\r\n            onClick={changeStatus}\r\n            className=\"Eye\"\r\n            src={process.env.PUBLIC_URL + \"/Images/\" + passwordStatus + \".svg\"}\r\n            alt=\"\"\r\n          ></img>\r\n          <div className=\"row\">\r\n            <button onClick={login} className=\"ButtonLog\">\r\n              Log-in\r\n            </button>\r\n            <div className=\"SpaceButtons\"></div>\r\n            <button onClick={singup} className=\"ButtonLog\">\r\n              Sign-up\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"space\"></div>\r\n        <div>\r\n          <img\r\n            width=\"600px\"\r\n            height=\"400px\"\r\n            className=\"ImageOnSlider\"\r\n            src={\r\n              process.env.PUBLIC_URL +\r\n              \"/Images/\" +\r\n              imageList[imageChosen][0] +\r\n              \".jpg\"\r\n            }\r\n            alt=\"\"\r\n          ></img>\r\n          <div className=\"GrayScreen\">\r\n            <div className=\"ImageText\">{imageList[imageChosen][1]}</div>\r\n            <button className=\"buttonSlider\" onClick={leftClick}>\r\n              <img\r\n                className=\"left\"\r\n                width=\"32px\"\r\n                height=\"32px\"\r\n                src={process.env.PUBLIC_URL + \"/Images/left-arrow.svg\"}\r\n                alt=\"\"\r\n              ></img>\r\n            </button>\r\n            <button className=\"buttonSlider\" onClick={rightClick}>\r\n              <img\r\n                className=\"right\"\r\n                width=\"32px\"\r\n                height=\"32px\"\r\n                src={process.env.PUBLIC_URL + \"/Images/right-arrow.svg\"}\r\n                alt=\"\"\r\n              ></img>\r\n            </button>\r\n          </div>\r\n          <div className=\"myRow\">{imageList.map((x) => circleChanger(x))}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Core from \"./Core/Core\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <Core />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Core from \"./Core/Core\";\r\n\r\nfunction Accounts() {\r\n  return (\r\n    <div>\r\n      <Core />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accounts;\r\n","import React from \"react\";\r\nimport Core from \"./Core/Core\";\r\n\r\nfunction Resources() {\r\n  return (\r\n    <div>\r\n      <Core />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resources;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Accounts from \"./Accounts\";\nimport Resources from \"./Resources\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/Resources\">\n          <Resources />\n        </Route>\n        <Route path=\"/About\">\n          <About />\n        </Route>\n        <Route path=\"/Accounts\">\n          <Accounts />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}